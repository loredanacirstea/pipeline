const solfixtures = [
  {"_id":"e2acc5fb-67fc-4629-a705-68279c7d0bb6","id":null,"dtypeid":null,"data":{"name":"VendorRegistration","license":"MIT","gapi":[{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"}],"name":"registerVendor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"vendor","type":"address"}],"name":"VendorRegistered","type":"event"},{"constant":true,"inputs":[{"name":"product_id","type":"uint256"}],"name":"getVendor","outputs":[{"name":"vendor","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"name":"table","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}],"natspec":{"methods":{"getVendor(uint256)":{"notice":"This function returns an available vendor for a given product","params":{"product_id":"The id of the product registered in the system."},"return":"vendor The Ethereum address of the vendor."},"registerVendor(address,uint256)":{"notice":"This function registers a vendor in the system, for the given product.","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."}}},"title":"Vendor Registration contract. This is where vendors are registered in the system."},"sourceByLanguage":{"0":{"sourcesTemp":{"browser/VendorRegistration.sol":"pragma solidity ^0.4.24;\n\n\n/// @title Vendor Registration contract. This is where vendors are registered in the system.\n/// @notice This is where vendors are registered in the system.\ncontract VendorRegistration {\n\n    mapping (uint256 => address[]) public table;\n\n    event VendorRegistered(uint256 product_id, address vendor);\n\n    constructor() public {\n        registerVendor(msg.sender, 1);\n    }\n\n    /// @notice This function returns an available vendor for a given product\n    /// @param product_id The id of the product registered in the system.\n    /// @return vendor The Ethereum address of the vendor.\n    function getVendor(uint256 product_id) view public returns (address vendor) {\n        if (table[product_id].length == 0) {\n            return 0x0;\n        }\n        return table[product_id][0];\n    }\n\n    /// @notice This function registers a vendor in the system, for the given product.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    function registerVendor(address vendor, uint256 product_id) public {\n        if (table[product_id].length == 0) {\n            table[product_id] = new address[](0);\n        }\n        table[product_id].push(vendor);\n        emit VendorRegistered(product_id, vendor);\n    }\n}\n"},"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147","settings":{"evmVersion":"byzantium","libraries":null,"optimizer":{"enabled":"false","runs":200}}},"compilerOutput":{"runtime":{"bytecode":"0x608060405234801561001057600080fd5b5061002b336001610030640100000000026401000000009004565b610258565b60008060008381526020019081526020016000208054905014156100a657600060405190808252806020026020018201604052801561007e5781602001602082028038833980820191505090505b5060008083815260200190815260200160002090805190602001906100a492919061018b565b505b6000808281526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fbed1fcb189d6e6b21e9e0adda44cdd0c1efc257cbe7236d9ac7b4e122ab341e68183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b828054828255906000526020600020908101928215610204579160200282015b828111156102035782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906101ab565b5b5090506102119190610215565b5090565b61025591905b8082111561025157600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161021b565b5090565b90565b6104a9806102676000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806365de1eb31461005c578063ae2cd2a9146100c9578063beded8a514610140575b600080fd5b34801561006857600080fd5b506100876004803603810190808035906020019092919050505061018d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d557600080fd5b506100fe6004803603810190808035906020019092919080359060200190929190505050610208565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014c57600080fd5b5061018b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610255565b005b6000806000808481526020019081526020016000208054905014156101b55760009050610203565b60008083815260200190815260200160002060008154811015156101d557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b60006020528160005260406000208181548110151561022357fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008381526020019081526020016000208054905014156102cb5760006040519080825280602002602001820160405280156102a35781602001602082028038833980820191505090505b5060008083815260200190815260200160002090805190602001906102c99291906103b0565b505b6000808281526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fbed1fcb189d6e6b21e9e0adda44cdd0c1efc257cbe7236d9ac7b4e122ab341e68183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b828054828255906000526020600020908101928215610429579160200282015b828111156104285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906103d0565b5b509050610436919061043a565b5090565b61047a91905b8082111561047657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610440565b5090565b905600a165627a7a7230582035cf2d6aeae7cd4f318eb461234313775d28181594abef078cbfd074fd0cf36c0029"}}}}},"metadata":{"chainids":[4],"categories":["solidity"]},"extra":{},"timestamp":"2020-03-09T15:02:44.221Z","ppackageid":null,"pfunctions":[{"_id":"0719931d-964a-4b49-b9d9-a5712fb6e57a","dtypeid":null,"graphid":null,"data":{"name":"getVendor","signature":"0x65de1eb3","signatureString":"getVendor(uint256)","gapi":{"constant":true,"inputs":[{"name":"product_id","type":"uint256"}],"name":"getVendor","outputs":[{"name":"vendor","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},"natspec":{"notice":"This function returns an available vendor for a given product","params":{"product_id":"The id of the product registered in the system."},"return":"vendor The Ethereum address of the vendor."}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"e2acc5fb-67fc-4629-a705-68279c7d0bb6"},{"_id":"134be7cb-eaaf-4a4b-b05b-58278800be31","dtypeid":null,"graphid":null,"data":{"signature":"0x861731d5","signatureString":"()","gapi":{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"e2acc5fb-67fc-4629-a705-68279c7d0bb6"},{"_id":"64c9d4dd-f30f-4df6-8321-e5ce0eee1725","dtypeid":null,"graphid":null,"data":{"name":"table","signature":"0xae2cd2a9","signatureString":"table(uint256,uint256)","gapi":{"constant":true,"inputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"name":"table","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"e2acc5fb-67fc-4629-a705-68279c7d0bb6"},{"_id":"a39f8620-b7ee-45d4-ae57-1b6de285f886","dtypeid":null,"graphid":null,"data":{"name":"VendorRegistered","signature":"0xbed1fcb1","signatureString":"VendorRegistered(uint256,address)","gapi":{"anonymous":false,"inputs":[{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"vendor","type":"address"}],"name":"VendorRegistered","type":"event"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"e2acc5fb-67fc-4629-a705-68279c7d0bb6"},{"_id":"ca233015-30f5-47a4-8cb5-28275d7e3dab","dtypeid":null,"graphid":null,"data":{"name":"registerVendor","signature":"0xbeded8a5","signatureString":"registerVendor(address,uint256)","gapi":{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"}],"name":"registerVendor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},"natspec":{"notice":"This function registers a vendor in the system, for the given product.","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."}}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"e2acc5fb-67fc-4629-a705-68279c7d0bb6"}],"pclassInstances":[{"_id":"02fa4567-feda-4870-ad7e-54d74b64dcb5","id":null,"pclassid_":null,"ppackageid":null,"dtypeid":null,"data":{"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147","settings":{"evmVersion":"byzantium","libraries":null,"optimizer":{"enabled":"false","runs":200}}},"compilerOutput":{"runtime":{"bytecode":"60806040523480156200001157600080fd5b506040516200122238038062001222833981018060405260e08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50506020820151604090920180519194929391640100000000811115620000f157600080fd5b820160208101848111156200010557600080fd5b81516401000000008111828201871017156200012057600080fd5b505092919060200180516401000000008111156200013d57600080fd5b820160208101848111156200015157600080fd5b81516401000000008111828201871017156200016c57600080fd5b505060208201516040909201805191949293916401000000008111156200019257600080fd5b82016020810184811115620001a657600080fd5b8151640100000000811182820187101715620001c157600080fd5b5050600380546001600160a01b0319163317908190556040519194506001600160a01b03169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38651620002269060049060208a0190620002b5565b5085516200023c906005906020890190620002b5565b506006805460ff191660ff87161790556000600255835162000266906007906020870190620002b5565b5082516200027c906008906020860190620002b5565b506009805463ffffffff191663ffffffff84161790558051620002a790600a906020840190620002b5565b50505050505050506200035a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f857805160ff191683800117855562000328565b8280016001018555821562000328579182015b82811115620003285782518255916020019190600101906200030b565b50620003369291506200033a565b5090565b6200035791905b8082111562000336576000815560010162000341565b90565b610eb8806200036a6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063cc16f5db1161007c578063cc16f5db14610488578063d22dc30f146104b4578063d59624b4146104d5578063dd62ed3e146104dd578063f2fde38b1461050b578063f58fef8e1461053157610158565b80638da5cb5b146103f45780638f32d59b14610418578063904c60941461042057806395d89b4114610428578063a457c2d714610430578063a9059cbb1461045c57610158565b806323b872dd1161011557806323b872dd1461029e578063313ce567146102d457806339509351146102f25780636f516c2c1461031e57806370a08231146103c4578063715018a6146103ea57610158565b8063065215861461015d57806306fdde03146101da578063095ea7b3146101e25780630f6798a51461022257806318160ddd1461024e5780631988513b14610268575b600080fd5b610165610539565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019f578181015183820152602001610187565b50505050905090810190601f1680156101cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101656105d0565b61020e600480360360408110156101f857600080fd5b506001600160a01b038135169060200135610631565b604080519115158252519081900360200190f35b61020e6004803603604081101561023857600080fd5b506001600160a01b0381351690602001356106ad565b6102566106d3565b60408051918252519081900360200190f35b61020e6004803603606081101561027e57600080fd5b506001600160a01b038135811691602081013590911690604001356106d9565b61020e600480360360608110156102b457600080fd5b506001600160a01b03813581169160208101359091169060400135610701565b6102dc6107ca565b6040805160ff9092168252519081900360200190f35b61020e6004803603604081101561030857600080fd5b506001600160a01b0381351690602001356107d3565b61020e6004803603602081101561033457600080fd5b81019060208101813564010000000081111561034f57600080fd5b82018360208201111561036157600080fd5b8035906020019184600183028401116401000000008311171561038357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610881945050505050565b610256600480360360208110156103da57600080fd5b50356001600160a01b03166108a7565b6103f26108c2565b005b6103fc61091d565b604080516001600160a01b039092168252519081900360200190f35b61020e61092c565b61016561093d565b61016561099e565b61020e6004803603604081101561044657600080fd5b506001600160a01b0381351690602001356109ff565b61020e6004803603604081101561047257600080fd5b506001600160a01b038135169060200135610a48565b61020e6004803603604081101561049e57600080fd5b506001600160a01b038135169060200135610a55565b6104bc610a72565b6040805163ffffffff9092168252519081900360200190f35b610165610a7e565b610256600480360360408110156104f357600080fd5b506001600160a01b0381358116916020013516610adf565b6103f26004803603602081101561052157600080fd5b50356001600160a01b0316610b0a565b61020e610b27565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b505050505090505b90565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b60006001600160a01b03831661064657600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60006106b761092c565b6106c057600080fd5b6106ca8383610b3d565b50600192915050565b60025490565b60006106e361092c565b6106ec57600080fd5b6106f7848484610be5565b5060019392505050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054610735908363ffffffff610cb016565b6001600160a01b0385166000908152600160209081526040808320338452909152902055610764848484610be5565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065460ff1690565b60006001600160a01b0383166107e857600080fd5b3360009081526001602090815260408083206001600160a01b038716845290915290205461081c908363ffffffff610cc516565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061088b61092c565b61089457600080fd5b81516106ca906008906020850190610df4565b6001600160a01b031660009081526020819052604090205490565b6108ca61092c565b6108d357600080fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b6003546001600160a01b031690565b6003546001600160a01b0316331490565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b60006001600160a01b038316610a1457600080fd5b3360009081526001602090815260408083206001600160a01b038716845290915290205461081c908363ffffffff610cb016565b60006106ca338484610be5565b6000610a5f61092c565b610a6857600080fd5b6106ca8383610cde565b60095463ffffffff1690565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b1261092c565b610b1b57600080fd5b610b2481610d85565b50565b6000610b3161092c565b610b3a57600080fd5b33ff5b6001600160a01b038216610b5057600080fd5b600254610b63908263ffffffff610cc516565b6002556001600160a01b038216600090815260208190526040902054610b8f908263ffffffff610cc516565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610bf857600080fd5b6001600160a01b038316600090815260208190526040902054610c21908263ffffffff610cb016565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610c56908263ffffffff610cc516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610cbf57600080fd5b50900390565b600082820183811015610cd757600080fd5b9392505050565b6001600160a01b038216610cf157600080fd5b600254610d04908263ffffffff610cb016565b6002556001600160a01b038216600090815260208190526040902054610d30908263ffffffff610cb016565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038116610d9857600080fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e3557805160ff1916838001178555610e62565b82800160010185558215610e62579182015b82811115610e62578251825591602001919060010190610e47565b50610e6e929150610e72565b5090565b6105cd91905b80821115610e6e5760008155600101610e7856fea165627a7a7230582075640ad7e8aac791fde41d1e68b693eb5ee4bb013ab5283097c219371559724d002900000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002bc00000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000001a4d4952495320415320372520323032322d30382d313520455552000000000000000000000000000000000000000000000000000000000000000000000000000a4d4952372f30383232450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000803431393435393041393646354342414646333343353041303931313141413532313238363535384243434239423643413042313835373535433830453333354543353634304437303735333234323343454144303142323739363842343637373130354539313531364344374631343533464546383435353939464633433037000000000000000000000000000000000000000000000000000000000000007668747470733a2f2f6d69726973706c61792e626c6f622e636f72652e77696e646f77732e6e65742f75706c6f616465642d646f63756d656e74732f75706c6f616465642d646f63756d656e74732f37626437663633312d376163362d346630302d623863662d6232646364333935306636392e70646600000000000000000000000000000000000000000000000000000000000000000000000000000000000a323032322f30382f313500000000000000000000000000000000000000000000"}},"deployment":{"address":"0x5Ba5AF7069E80CCDE94FB447dBbdE0e7389Ef605","txhash":"0x17a5e8223b199978807833230d7685e77373d0d7875fc4482d47d393460025aa","block":6130973,"constructorArgs":null,"chainid":4}},"metadata":{"categories":["solidity"]},"extra":{},"timestamp":"2020-02-22T10:18:00.000Z","pclassid":"e2acc5fb-67fc-4629-a705-68279c7d0bb6"}]},
  {"_id":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577","id":null,"dtypeid":null,"data":{"name":"VendorPrices","license":"MIT","gapi":[{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"},{"name":"price_per_unit","type":"uint256"}],"name":"setUnitPrice","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"vendor","type":"address"},{"indexed":false,"name":"price_per_unit","type":"uint256"}],"name":"PriceSet","type":"event"},{"constant":true,"inputs":[{"name":"product_id","type":"uint256"},{"name":"vendor","type":"address"},{"name":"wei_value","type":"uint256"}],"name":"calculateQuantity","outputs":[{"name":"quantity","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"prices","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"natspec":{"methods":{"calculateQuantity(uint256,address,uint256)":{"notice":"This function calculated the product quantity for a certain product and vendor price.","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor.","wei_value":"The total amount of WEI that the buyer wants to pay for the product."},"return":"quantity The quantity of product that `wei_value` can buy from a vendor."},"setUnitPrice(address,uint256,uint256)":{"notice":"This function sets the price of a unit of a product.","params":{"price_per_unit":"The price paid for a unit of the given product.","product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."}}},"title":"Vendor Prices contract. This is where vendors register their product prices in the system."},"sourceByLanguage":{"0":{"sourcesTemp":{"browser/VendorRegistration.sol":"pragma solidity ^0.4.24;\n\n\n/// @title Vendor Registration contract. This is where vendors are registered in the system.\n/// @notice This is where vendors are registered in the system.\ncontract VendorRegistration {\n\n    mapping (uint256 => address[]) public table;\n\n    event VendorRegistered(uint256 product_id, address vendor);\n\n    constructor() public {\n        registerVendor(msg.sender, 1);\n    }\n\n    /// @notice This function returns an available vendor for a given product\n    /// @param product_id The id of the product registered in the system.\n    /// @return vendor The Ethereum address of the vendor.\n    function getVendor(uint256 product_id) view public returns (address vendor) {\n        if (table[product_id].length == 0) {\n            return 0x0;\n        }\n        return table[product_id][0];\n    }\n\n    /// @notice This function registers a vendor in the system, for the given product.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    function registerVendor(address vendor, uint256 product_id) public {\n        if (table[product_id].length == 0) {\n            table[product_id] = new address[](0);\n        }\n        table[product_id].push(vendor);\n        emit VendorRegistered(product_id, vendor);\n    }\n}\n","browser/VendorPrices.sol":"pragma solidity ^0.4.24;\n\n\n/// @title Vendor Prices contract. This is where vendors register their product prices in the system.\n/// @notice This is where vendors register their product prices in the system.\ncontract VendorPrices {\n    mapping (bytes32 => uint256) public prices;\n\n    event PriceSet(uint256 product_id, address vendor, uint256 price_per_unit);\n\n    constructor() public {\n        setUnitPrice(msg.sender, 1, 10);\n    }\n\n    /// @notice This function calculated the product quantity for a certain product and vendor price.\n    /// @param product_id The id of the product registered in the system.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param wei_value The total amount of WEI that the buyer wants to pay for the product.\n    /// @return quantity The quantity of product that `wei_value` can buy from a vendor.\n    function calculateQuantity(uint256 product_id, address vendor, uint256 wei_value) view public returns (uint256 quantity) {\n        require(wei_value > 0);\n        bytes32 key = keccak256(abi.encodePacked(vendor, product_id));\n        require(prices[key] > 0);\n        quantity = wei_value / prices[key];\n    }\n\n    /// @notice This function sets the price of a unit of a product.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @param price_per_unit The price paid for a unit of the given product.\n    function setUnitPrice(address vendor, uint256 product_id, uint256 price_per_unit) public {\n        bytes32 key = keccak256(abi.encodePacked(vendor, product_id));\n        prices[key] = price_per_unit;\n\n        emit PriceSet(product_id, vendor, price_per_unit);\n    }\n}\n","browser/MarketPlace.sol":"pragma solidity ^0.4.24;\n\nimport './VendorRegistration.sol';\nimport './VendorPrices.sol';\n\n\n/// @title Market Place contract. This is where users buy products from registered vendors.\n/// @notice This is where users buy products from registered vendors.\ncontract MarketPlace {\n    VendorRegistration public registration_contract;\n    VendorPrices public prices_contract;\n\n    mapping (bytes32 => uint256) public available_quantities;\n\n    event MarketBuy(address vendor, uint256 product_id, uint256 quantity, address buyer);\n    event QuantitySet(address vendor, uint256 product_id, uint256 quantity);\n\n    constructor(address registration_address, address prices_address) public {\n        registration_contract = VendorRegistration(registration_address);\n        prices_contract = VendorPrices(prices_address);\n\n        setQuantity(msg.sender, 1, 1000);\n    }\n\n    /// @notice This function allows a user to buy a product from a registered vendor.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param buyer The Ethereum address of the buyer.\n    /// @param product_id The id of the product registered in the system.\n    /// @param quantity The amount of product that the user wants to buy.\n    function buy(address vendor, address buyer, uint256 product_id, uint256 quantity) payable public {\n        bytes32 key = getKey(vendor, product_id);\n        require(available_quantities[key] >= quantity);\n        uint256 computed_quantity = prices_contract.calculateQuantity(product_id, vendor, msg.value);\n        require(computed_quantity >= quantity);\n        available_quantities[key] -= quantity;\n\n        emit MarketBuy(vendor, product_id, quantity, buyer);\n    }\n\n    /// @notice This function sets the quantity of a product that a registered vendor has available for purchase.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @param quantity The amount of product that the vendor has available for purchase.\n    function setQuantity(address vendor, uint256 product_id, uint256 quantity) public {\n        bytes32 key = getKey(vendor, product_id);\n        available_quantities[key] = quantity;\n\n        emit QuantitySet(vendor, product_id, quantity);\n    }\n\n    /// @notice This function returns the quantity of product that a registered vendor has available for purchase.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @return quantity The amount of the product that the vendor has available for purchase.\n    function getQuantity(address vendor, uint256 product_id) view public returns (uint256 quantity) {\n        bytes32 key = getKey(vendor, product_id);\n        return available_quantities[key];\n    }\n\n    /// @dev This function returns the key for the available_quantities mapping\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @return key The key for the available_quantities mapping\n    function getKey(address vendor, uint256 product_id) pure public returns (bytes32 key) {\n        return keccak256(abi.encodePacked(vendor, product_id));\n    }\n}\n"},"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147","settings":{"evmVersion":"byzantium","libraries":null,"optimizer":{"enabled":"false","runs":200}}},"compilerOutput":{"runtime":{"bytecode":"0x608060405234801561001057600080fd5b5061002d336001600a610032640100000000026401000000009004565b610193565b60008383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156100cc57805182526020820191506020810190506020830392506100a7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050816000808360001916600019168152602001908152602001600020819055507f897067d69d8599f561aaa211b7f688922d15fe296be5d957b5313de9f0d13cdc838584604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a150505050565b61043a806101a26000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360846bc61461005c57806369726205146100a157806369739c89146100f8575b600080fd5b34801561006857600080fd5b5061008b6004803603810190808035600019169060200190929190505050610163565b6040518082815260200191505060405180910390f35b3480156100ad57600080fd5b506100f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061017b565b005b34801561010457600080fd5b5061014d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102dc565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b60008383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561021557805182526020820191506020810190506020830392506101f0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050816000808360001916600019168152602001908152602001600020819055507f897067d69d8599f561aaa211b7f688922d15fe296be5d957b5313de9f0d13cdc838584604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a150505050565b6000806000831115156102ee57600080fd5b8385604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156103865780518252602082019150602081019050602083039250610361565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060008060008360001916600019168152602001908152602001600020541115156103de57600080fd5b6000808260001916600019168152602001908152602001600020548381151561040357fe5b0491505093925050505600a165627a7a723058202905d7591d2d4bc2826780af2b2fd7a4836d89aabe900bc03d1cbff10bd50a290029"}}}}},"metadata":{"chainids":[4],"categories":["solidity"]},"extra":{},"timestamp":"2020-03-09T15:02:44.221Z","ppackageid":null,"pfunctions":[{"_id":"427b08f6-24bb-4259-85cd-55d9bcc2f695","dtypeid":null,"graphid":null,"data":{"name":"PriceSet","signature":"0x897067d6","signatureString":"PriceSet(uint256,address,uint256)","gapi":{"anonymous":false,"inputs":[{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"vendor","type":"address"},{"indexed":false,"name":"price_per_unit","type":"uint256"}],"name":"PriceSet","type":"event"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577"},{"_id":"42968ab0-7135-47c0-b764-226c97e2fae1","dtypeid":null,"graphid":null,"data":{"name":"prices","signature":"0x60846bc6","signatureString":"prices(bytes32)","gapi":{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"prices","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577"},{"_id":"b9dc8955-63ba-45b9-84ba-d22c3f7e3f99","dtypeid":null,"graphid":null,"data":{"signature":"0x861731d5","signatureString":"()","gapi":{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577"},{"_id":"c6a4a43d-e04a-433b-befb-cbbe439f8329","dtypeid":null,"graphid":null,"data":{"name":"setUnitPrice","signature":"0x69726205","signatureString":"setUnitPrice(address,uint256,uint256)","gapi":{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"},{"name":"price_per_unit","type":"uint256"}],"name":"setUnitPrice","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},"natspec":{"notice":"This function sets the price of a unit of a product.","params":{"price_per_unit":"The price paid for a unit of the given product.","product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."}}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577"},{"_id":"d24bffa2-4142-4649-9024-5d42c43cf392","dtypeid":null,"graphid":null,"data":{"name":"calculateQuantity","signature":"0x69739c89","signatureString":"calculateQuantity(uint256,address,uint256)","gapi":{"constant":true,"inputs":[{"name":"product_id","type":"uint256"},{"name":"vendor","type":"address"},{"name":"wei_value","type":"uint256"}],"name":"calculateQuantity","outputs":[{"name":"quantity","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},"natspec":{"notice":"This function calculated the product quantity for a certain product and vendor price.","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor.","wei_value":"The total amount of WEI that the buyer wants to pay for the product."},"return":"quantity The quantity of product that `wei_value` can buy from a vendor."}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577"}],"pclassInstances":[{"_id":"d7cee668-b584-4c81-b380-a0b1de168428","id":null,"pclassid_":null,"ppackageid":null,"dtypeid":null,"data":{"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147","settings":{"evmVersion":"byzantium","libraries":null,"optimizer":{"enabled":"false","runs":200}}},"compilerOutput":{"runtime":{"bytecode":"0x608060405234801561001057600080fd5b5061002d336001600a610032640100000000026401000000009004565b610193565b60008383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156100cc57805182526020820191506020810190506020830392506100a7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050816000808360001916600019168152602001908152602001600020819055507f897067d69d8599f561aaa211b7f688922d15fe296be5d957b5313de9f0d13cdc838584604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a150505050565b61043a806101a26000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360846bc61461005c57806369726205146100a157806369739c89146100f8575b600080fd5b34801561006857600080fd5b5061008b6004803603810190808035600019169060200190929190505050610163565b6040518082815260200191505060405180910390f35b3480156100ad57600080fd5b506100f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061017b565b005b34801561010457600080fd5b5061014d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102dc565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b60008383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561021557805182526020820191506020810190506020830392506101f0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050816000808360001916600019168152602001908152602001600020819055507f897067d69d8599f561aaa211b7f688922d15fe296be5d957b5313de9f0d13cdc838584604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a150505050565b6000806000831115156102ee57600080fd5b8385604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156103865780518252602082019150602081019050602083039250610361565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060008060008360001916600019168152602001908152602001600020541115156103de57600080fd5b6000808260001916600019168152602001908152602001600020548381151561040357fe5b0491505093925050505600a165627a7a723058202905d7591d2d4bc2826780af2b2fd7a4836d89aabe900bc03d1cbff10bd50a290029"}},"deployment":{"address":"0x4FefBfE56587f4a2A12781D42dD02208881DeC2F","txhash":"0xa1375c62a9898819d7796ba0eac589c1627c2fc88fa432a67cda6bb64add1835","block":6130975,"constructorArgs":null,"chainid":4}},"metadata":{"categories":["solidity"]},"extra":{},"timestamp":"2020-02-22T10:18:00.000Z","pclassid":"2d9ff2df-afd1-4304-b9e6-d5d2d10f5577"}]},
  {"_id":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647","id":null,"dtypeid":null,"data":{"name":"MarketPlace","license":"MIT","gapi":[{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"buyer","type":"address"},{"name":"product_id","type":"uint256"},{"name":"quantity","type":"uint256"}],"name":"buy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"},{"name":"quantity","type":"uint256"}],"name":"setQuantity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"registration_address","type":"address"},{"name":"prices_address","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"vendor","type":"address"},{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"quantity","type":"uint256"},{"indexed":false,"name":"buyer","type":"address"}],"name":"MarketBuy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"vendor","type":"address"},{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"quantity","type":"uint256"}],"name":"QuantitySet","type":"event"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"available_quantities","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"}],"name":"getKey","outputs":[{"name":"key","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"}],"name":"getQuantity","outputs":[{"name":"quantity","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"prices_contract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"registration_contract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}],"natspec":{"methods":{"buy(address,address,uint256,uint256)":{"notice":"This function allows a user to buy a product from a registered vendor.","params":{"buyer":"The Ethereum address of the buyer.","product_id":"The id of the product registered in the system.","quantity":"The amount of product that the user wants to buy.","vendor":"The Ethereum address of the vendor."}},"getKey(address,uint256)":{"details":"This function returns the key for the available_quantities mapping","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."},"return":"key The key for the available_quantities mapping"},"getQuantity(address,uint256)":{"notice":"This function returns the quantity of product that a registered vendor has available for purchase.","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."},"return":"quantity The amount of the product that the vendor has available for purchase."},"setQuantity(address,uint256,uint256)":{"notice":"This function sets the quantity of a product that a registered vendor has available for purchase.","params":{"product_id":"The id of the product registered in the system.","quantity":"The amount of product that the vendor has available for purchase.","vendor":"The Ethereum address of the vendor."}}},"title":"Market Place contract. This is where users buy products from registered vendors."},"sourceByLanguage":{"0":{"sourcesTemp":{"browser/VendorRegistration.sol":"pragma solidity ^0.4.24;\n\n\n/// @title Vendor Registration contract. This is where vendors are registered in the system.\n/// @notice This is where vendors are registered in the system.\ncontract VendorRegistration {\n\n    mapping (uint256 => address[]) public table;\n\n    event VendorRegistered(uint256 product_id, address vendor);\n\n    constructor() public {\n        registerVendor(msg.sender, 1);\n    }\n\n    /// @notice This function returns an available vendor for a given product\n    /// @param product_id The id of the product registered in the system.\n    /// @return vendor The Ethereum address of the vendor.\n    function getVendor(uint256 product_id) view public returns (address vendor) {\n        if (table[product_id].length == 0) {\n            return 0x0;\n        }\n        return table[product_id][0];\n    }\n\n    /// @notice This function registers a vendor in the system, for the given product.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    function registerVendor(address vendor, uint256 product_id) public {\n        if (table[product_id].length == 0) {\n            table[product_id] = new address[](0);\n        }\n        table[product_id].push(vendor);\n        emit VendorRegistered(product_id, vendor);\n    }\n}\n","browser/VendorPrices.sol":"pragma solidity ^0.4.24;\n\n\n/// @title Vendor Prices contract. This is where vendors register their product prices in the system.\n/// @notice This is where vendors register their product prices in the system.\ncontract VendorPrices {\n    mapping (bytes32 => uint256) public prices;\n\n    event PriceSet(uint256 product_id, address vendor, uint256 price_per_unit);\n\n    constructor() public {\n        setUnitPrice(msg.sender, 1, 10);\n    }\n\n    /// @notice This function calculated the product quantity for a certain product and vendor price.\n    /// @param product_id The id of the product registered in the system.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param wei_value The total amount of WEI that the buyer wants to pay for the product.\n    /// @return quantity The quantity of product that `wei_value` can buy from a vendor.\n    function calculateQuantity(uint256 product_id, address vendor, uint256 wei_value) view public returns (uint256 quantity) {\n        require(wei_value > 0);\n        bytes32 key = keccak256(abi.encodePacked(vendor, product_id));\n        require(prices[key] > 0);\n        quantity = wei_value / prices[key];\n    }\n\n    /// @notice This function sets the price of a unit of a product.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @param price_per_unit The price paid for a unit of the given product.\n    function setUnitPrice(address vendor, uint256 product_id, uint256 price_per_unit) public {\n        bytes32 key = keccak256(abi.encodePacked(vendor, product_id));\n        prices[key] = price_per_unit;\n\n        emit PriceSet(product_id, vendor, price_per_unit);\n    }\n}\n","browser/MarketPlace.sol":"pragma solidity ^0.4.24;\n\nimport './VendorRegistration.sol';\nimport './VendorPrices.sol';\n\n\n/// @title Market Place contract. This is where users buy products from registered vendors.\n/// @notice This is where users buy products from registered vendors.\ncontract MarketPlace {\n    VendorRegistration public registration_contract;\n    VendorPrices public prices_contract;\n\n    mapping (bytes32 => uint256) public available_quantities;\n\n    event MarketBuy(address vendor, uint256 product_id, uint256 quantity, address buyer);\n    event QuantitySet(address vendor, uint256 product_id, uint256 quantity);\n\n    constructor(address registration_address, address prices_address) public {\n        registration_contract = VendorRegistration(registration_address);\n        prices_contract = VendorPrices(prices_address);\n\n        setQuantity(msg.sender, 1, 1000);\n    }\n\n    /// @notice This function allows a user to buy a product from a registered vendor.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param buyer The Ethereum address of the buyer.\n    /// @param product_id The id of the product registered in the system.\n    /// @param quantity The amount of product that the user wants to buy.\n    function buy(address vendor, address buyer, uint256 product_id, uint256 quantity) payable public {\n        bytes32 key = getKey(vendor, product_id);\n        require(available_quantities[key] >= quantity);\n        uint256 computed_quantity = prices_contract.calculateQuantity(product_id, vendor, msg.value);\n        require(computed_quantity >= quantity);\n        available_quantities[key] -= quantity;\n\n        emit MarketBuy(vendor, product_id, quantity, buyer);\n    }\n\n    /// @notice This function sets the quantity of a product that a registered vendor has available for purchase.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @param quantity The amount of product that the vendor has available for purchase.\n    function setQuantity(address vendor, uint256 product_id, uint256 quantity) public {\n        bytes32 key = getKey(vendor, product_id);\n        available_quantities[key] = quantity;\n\n        emit QuantitySet(vendor, product_id, quantity);\n    }\n\n    /// @notice This function returns the quantity of product that a registered vendor has available for purchase.\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @return quantity The amount of the product that the vendor has available for purchase.\n    function getQuantity(address vendor, uint256 product_id) view public returns (uint256 quantity) {\n        bytes32 key = getKey(vendor, product_id);\n        return available_quantities[key];\n    }\n\n    /// @dev This function returns the key for the available_quantities mapping\n    /// @param vendor The Ethereum address of the vendor.\n    /// @param product_id The id of the product registered in the system.\n    /// @return key The key for the available_quantities mapping\n    function getKey(address vendor, uint256 product_id) pure public returns (bytes32 key) {\n        return keccak256(abi.encodePacked(vendor, product_id));\n    }\n}\n"},"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147","settings":{"evmVersion":"byzantium","libraries":null,"optimizer":{"enabled":"false","runs":200}}},"compilerOutput":{"runtime":{"bytecode":"0x608060405234801561001057600080fd5b506040516040806109df8339810180604052810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100db3360016103e86100e2640100000000026401000000009004565b5050610267565b60006100fd8484610198640100000000026401000000009004565b905081600260008360001916600019168152602001908152602001600020819055507f5ebf8445b374b3f9ffae3fee641ebcbc0d5fc018638c211757b382097d3d4040848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b60008282604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515610232578051825260208201915060208101905060208303925061020d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b610769806102766000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631e073fcf146100885780631e51349a146100e95780634f7a868a14610140578063a0ae81b314610197578063a369f72e146101dc578063a9d424e214610245578063ab145c19146102af575b600080fd5b34801561009457600080fd5b506100d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610306565b6040518082815260200191505060405180910390f35b3480156100f557600080fd5b506100fe61033a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014c57600080fd5b50610155610360565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a357600080fd5b506101c66004803603810190808035600019169060200190929190505050610385565b6040518082815260200191505060405180910390f35b3480156101e857600080fd5b50610227600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061039d565b60405180826000191660001916815260200191505060405180910390f35b6102ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061046c565b005b3480156102bb57600080fd5b50610304600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610696565b005b600080610313848461039d565b90506002600082600019166000191681526020019081526020016000205491505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60008282604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156104375780518252602082019150602081019050602083039250610412565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b600080610479868561039d565b91508260026000846000191660001916815260200190815260200160002054101515156104a557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369739c898588346040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050506040513d602081101561059c57600080fd5b810190808051906020019092919050505090508281101515156105be57600080fd5b82600260008460001916600019168152602001908152602001600020600082825403925050819055507f7a15316edc324aa9a99048a44c7a87865e6f5b7c61b28d23c8fecedaede789ce86858588604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a1505050505050565b60006106a2848461039d565b905081600260008360001916600019168152602001908152602001600020819055507f5ebf8445b374b3f9ffae3fee641ebcbc0d5fc018638c211757b382097d3d4040848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050505600a165627a7a72305820c0db4ccc4b3ba946efd8170aa4974e3f782d275477e70d381447c62b2dd9d3ac0029"}}}}},"metadata":{"chainids":[4],"categories":["solidity"]},"extra":{},"timestamp":"2020-03-09T15:02:44.221Z","ppackageid":null,"pfunctions":[{"_id":"27e87684-e36d-429c-ba2a-88e979f424ee","dtypeid":null,"graphid":null,"data":{"name":"registration_contract","signature":"0x4f7a868a","signatureString":"registration_contract()","gapi":{"constant":true,"inputs":[],"name":"registration_contract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"45573795-455e-4b9f-9120-4bb7f8ab9018","dtypeid":null,"graphid":null,"data":{"name":"prices_contract","signature":"0x1e51349a","signatureString":"prices_contract()","gapi":{"constant":true,"inputs":[],"name":"prices_contract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"57c281be-267f-49a2-8741-5d2c1f036a5a","dtypeid":null,"graphid":null,"data":{"name":"MarketBuy","signature":"0x7a15316e","signatureString":"MarketBuy(address,uint256,uint256,address)","gapi":{"anonymous":false,"inputs":[{"indexed":false,"name":"vendor","type":"address"},{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"quantity","type":"uint256"},{"indexed":false,"name":"buyer","type":"address"}],"name":"MarketBuy","type":"event"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"6e622568-83f3-4217-8f76-2ba06aeef157","dtypeid":null,"graphid":null,"data":{"name":"buy","signature":"0xa9d424e2","signatureString":"buy(address,address,uint256,uint256)","gapi":{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"buyer","type":"address"},{"name":"product_id","type":"uint256"},{"name":"quantity","type":"uint256"}],"name":"buy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},"natspec":{"notice":"This function allows a user to buy a product from a registered vendor.","params":{"buyer":"The Ethereum address of the buyer.","product_id":"The id of the product registered in the system.","quantity":"The amount of product that the user wants to buy.","vendor":"The Ethereum address of the vendor."}}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"91220a47-2162-4759-a835-574914915948","dtypeid":null,"graphid":null,"data":{"name":"available_quantities","signature":"0xa0ae81b3","signatureString":"available_quantities(bytes32)","gapi":{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"available_quantities","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"bdccd2d7-116c-469d-b368-7c8e68b03373","dtypeid":null,"graphid":null,"data":{"name":"getKey","signature":"0xa369f72e","signatureString":"getKey(address,uint256)","gapi":{"constant":true,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"}],"name":"getKey","outputs":[{"name":"key","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},"natspec":{"details":"This function returns the key for the available_quantities mapping","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."},"return":"key The key for the available_quantities mapping"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"c65d7a91-ef0f-4ad2-a552-9e042e097e43","dtypeid":null,"graphid":null,"data":{"name":"getQuantity","signature":"0x1e073fcf","signatureString":"getQuantity(address,uint256)","gapi":{"constant":true,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"}],"name":"getQuantity","outputs":[{"name":"quantity","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},"natspec":{"notice":"This function returns the quantity of product that a registered vendor has available for purchase.","params":{"product_id":"The id of the product registered in the system.","vendor":"The Ethereum address of the vendor."},"return":"quantity The amount of the product that the vendor has available for purchase."}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"ce43fda3-f229-42e9-b03a-e372c962efa8","dtypeid":null,"graphid":null,"data":{"name":"QuantitySet","signature":"0x5ebf8445","signatureString":"QuantitySet(address,uint256,uint256)","gapi":{"anonymous":false,"inputs":[{"indexed":false,"name":"vendor","type":"address"},{"indexed":false,"name":"product_id","type":"uint256"},{"indexed":false,"name":"quantity","type":"uint256"}],"name":"QuantitySet","type":"event"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"d283436d-4297-41a7-a224-86fe76f4ab54","dtypeid":null,"graphid":null,"data":{"name":"setQuantity","signature":"0xab145c19","signatureString":"setQuantity(address,uint256,uint256)","gapi":{"constant":false,"inputs":[{"name":"vendor","type":"address"},{"name":"product_id","type":"uint256"},{"name":"quantity","type":"uint256"}],"name":"setQuantity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},"natspec":{"notice":"This function sets the quantity of a product that a registered vendor has available for purchase.","params":{"product_id":"The id of the product registered in the system.","quantity":"The amount of product that the vendor has available for purchase.","vendor":"The Ethereum address of the vendor."}}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"},{"_id":"f79e399b-520f-4a0e-b8cd-9c567ff6886b","dtypeid":null,"graphid":null,"data":{"signature":"0x1c26cc85","signatureString":"(address,address)","gapi":{"inputs":[{"name":"registration_address","type":"address"},{"name":"prices_address","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}},"metadata":{"chainids":[4],"categories":["solidity"]},"timestamp":"2020-03-09T15:02:44.221Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"}],"pclassInstances":[{"_id":"11d0841d-48ba-45f8-bfa3-27fdea796e05","id":null,"pclassid_":null,"ppackageid":null,"dtypeid":null,"data":{"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147","settings":{"evmVersion":"byzantium","libraries":null,"optimizer":{"enabled":"false","runs":200}}},"compilerOutput":{"runtime":{"bytecode":"0x608060405234801561001057600080fd5b506040516040806109df8339810180604052810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100db3360016103e86100e2640100000000026401000000009004565b5050610267565b60006100fd8484610198640100000000026401000000009004565b905081600260008360001916600019168152602001908152602001600020819055507f5ebf8445b374b3f9ffae3fee641ebcbc0d5fc018638c211757b382097d3d4040848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b60008282604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515610232578051825260208201915060208101905060208303925061020d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b610769806102766000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631e073fcf146100885780631e51349a146100e95780634f7a868a14610140578063a0ae81b314610197578063a369f72e146101dc578063a9d424e214610245578063ab145c19146102af575b600080fd5b34801561009457600080fd5b506100d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610306565b6040518082815260200191505060405180910390f35b3480156100f557600080fd5b506100fe61033a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014c57600080fd5b50610155610360565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a357600080fd5b506101c66004803603810190808035600019169060200190929190505050610385565b6040518082815260200191505060405180910390f35b3480156101e857600080fd5b50610227600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061039d565b60405180826000191660001916815260200191505060405180910390f35b6102ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061046c565b005b3480156102bb57600080fd5b50610304600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610696565b005b600080610313848461039d565b90506002600082600019166000191681526020019081526020016000205491505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60008282604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156104375780518252602082019150602081019050602083039250610412565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b600080610479868561039d565b91508260026000846000191660001916815260200190815260200160002054101515156104a557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369739c898588346040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050506040513d602081101561059c57600080fd5b810190808051906020019092919050505090508281101515156105be57600080fd5b82600260008460001916600019168152602001908152602001600020600082825403925050819055507f7a15316edc324aa9a99048a44c7a87865e6f5b7c61b28d23c8fecedaede789ce86858588604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a1505050505050565b60006106a2848461039d565b905081600260008360001916600019168152602001908152602001600020819055507f5ebf8445b374b3f9ffae3fee641ebcbc0d5fc018638c211757b382097d3d4040848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050505600a165627a7a72305820c0db4ccc4b3ba946efd8170aa4974e3f782d275477e70d381447c62b2dd9d3ac0029"}},"deployment":{"address":"0x87140D2DD09e0f6E7461b5F6a8B2D6084f4b7a5F","txhash":"0xef9f7e90ba7a27b0ebf7d2364204a0ce53ab38e14b961aee6eda5bc55c5e5a3c","block":6130977,"constructorArgs":null,"chainid":4}},"metadata":{"categories":["solidity"]},"extra":{},"timestamp":"2020-02-22T10:18:00.000Z","pclassid":"ac3ec84a-a4e7-4dfc-9fcf-d5239d48d647"}]}
]

export default solfixtures;
